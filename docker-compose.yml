version: '3.7'
services:
  mongo:    
    container_name: stably-mongodb
    image: mongo:3.6
    restart: always
    ports:
      - "27017:27017" 
    environment:
      MONGO_INITDB_DATABASE: stably-test
      # MONGO_INITDB_ROOT_USERNAME: transybao
      # MONGO_INITDB_ROOT_PASSWORD: transybao
    networks:
      - backend
  mongo-express:
    container_name: stably-mongo-express
    image: mongo-express
    restart: on-failure
    ports:
      - 8082:8081
    # environment:
    #   - ME_CONFIG_MONGODB_ADMINUSERNAME=transybao
    #   - ME_CONFIG_MONGODB_ADMINPASSWORD=transybao
    links:
      - mongo
    networks:
      - backend
  nodejs:
    container_name: stably-nodejs-api
    build:
      context: .
      dockerfile: nodejs.dockerfile
    restart: on-failure
    volumes:
      - .:/api
    environment: 
      - "NODE_ENV=development"
    ports:
      - 3000:3000
    links:
      - mongo
      - redis
    command: ["./wait-for-it.sh", "mongo:27017", "--", "npm", "start"]
    networks:
      - backend
  nginx:
    container_name: stably-nginx-reverse-proxy
    build:
      context: .
      dockerfile: nginx.dockerfile
    volumes:
      - ./nginx-conf/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
    depends_on:
      - nodejs
    networks:
      - backend
    restart: on-failure
  redis:
    container_name: stably-redis-cache-queue
    command: ["redis-server", "--appendonly", "yes"]
    build:
      context: .
      dockerfile: redis.dockerfile
    ports:
      - 6379:6379
    networks:
      - backend

volumes: 
  .:
networks:
  backend:
